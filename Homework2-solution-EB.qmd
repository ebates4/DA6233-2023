---
title: "Homework 2"
subtitle: "ggplot2 rocks!"
author: "Emily Bates, xzz320"
date: "`r Sys.Date()`"
format:
  html:
    theme: none
    embed-resources: true
---

```{r}
#| label = "setup",
#| include = FALSE

library(tidyverse)
cleanrmd::use_cleanrmd("holiday")
```


Homework 2 is all about using `ggplot2`. You will use `tech_stocks_csv.zip` data set you have used previously in Homework 1. You are aware of its structure and the meanings of the variables. Recall that you explored it in Homework 1. Knowing your data set well before you start exploring it is absolutely essential for data science.

```{r}

d1 = read_csv("tech_stocks_csv.zip", show_col_types = FALSE) %>% 
  filter(sale > 0) %>% 
  mutate(conm = stringr::str_to_title(conm), # Converts the string to title case
         datadate = lubridate::ymd(datadate)) # Convert datadate into a date variable
```


<p style="border:3px; border-style:solid; border-color:#b50000; padding: 1em;">This homework consists of 7 questions. <b>Your objective is to reproduce the output shown in the HTML file for Q1 through Q7.</b> </p>


## Q1 (3 points)

Create a bar graph of the **average sales** of each company using the variable `sale` such that the bars are arranged in an ascending order. I'm giving you the code to prepare the data set to make the plot:

```{r}
d1_1 = d1 %>%
  group_by(conm) %>% 
  summarize(avg_sale = mean(sale), .groups = "drop")
```

`d1_1` has the appropriate variable you need to create the bar plot. Notice that I have used `.groups = "drop"` inside `summarize()`. This makes sure that the data you will use in `ggplot()` is not grouped.


```{r}
ggplot(d1_1, aes(x = reorder(conm,avg_sale), y = avg_sale)) +
  geom_col() +
  coord_flip()+
  labs(x = "Company", y = "Average Sale in $ Millions") +
  scale_y_continuous(labels=scales::dollar_format())
```

## Q2 (1 point)

Modify the plot in Q1 to add text labels to the bars. Note that I have used `hjust = -0.2` and `size = 3` for the text labels.

```{r}
ggplot(d1_1, aes(x = reorder(conm,avg_sale), y = avg_sale)) +
  geom_col() +
  coord_flip()+
  labs(x = "Company", y = "Average Sale in $ Millions") +
  scale_y_continuous(labels=scales::dollar_format()) +
  geom_text(aes(label = round(avg_sale/1000, 0)), size=3,hjust = -0.2)


```

## Q3 (2 points)

In finance, it is widely believed that companies with more R&D prefer lower debt. Let's explore whether we can observe this relationship in our data. Using `mutate`, first create these two variables. (I am giving you the exact formulas to put inside `mutate()`.)

`debt_ratio = (dlc + replace_na(dltt, 0)) / at`

`rnd_int = xrd / sale`

Next, create a scatter plot with `debt_ratio` on the X axis and `rnd_int` on the Y axis.


```{r}
#| message = FALSE
d1 %>% 
  mutate(debt_ratio = (dlc + replace_na(dltt, 0)) / at,
         rnd_int = xrd / sale) %>% 
  ggplot(mapping = aes(x = debt_ratio, y = rnd_int)) +
  geom_point(size = 3, alpha = 0.7, shape=21,fill = "gray60") +
  geom_smooth(method=lm)+
  labs(x = "Debt Ratio", y = "R&D to Sales Ratio")
```


## Q4 (2 points)

Profit margin is simply profits divided by sales. Compare profit margins of the following six companies - Apple, Tesla, Meta, Microsoft, Amazon, and Nvidia - over the full sample period. Use `fyear` on the X axis. `fyear` is the fiscal year. 

Here I give you the code to get the data set in required form. First, note that I am using the variable `tic` to filter certain "ticker symbols", which are the IDs used by stock markets for companies. I am doing this simply to save on typing rather than writing out the entire company names! You could also use `gvkey` as it is a company identifier. But `gvkey` are not intuitive. Ticker symbols can help you guess (in most cases) what a stock is.


As you are using `fyear` for plotting a time series, we have to make sure that `fyear` is indeed interpreted by `ggplot2` as a time variable. However, it's not that straightforward. This is because fiscal years, unlike calendar years, don't all end exactly on the same day! I know it sounds insane but that's true. Think about this like school years in different school districts. If the fiscal year ends in different months, how can we create a valid comparison among these companies? Indeed, the variable `datadate`, which is the fiscal year end date, is not the same for all the companies for any given fiscal year. Luckily we are dealing with annual data and so we can artificially choose to pick a common year end date for the sake of making the plot. **Note that this is not the right thing to do for statistical or financial analysis!** This simply helps us in making a meaningful plot. As such, I am setting the year end date for all the fiscal years to December 31st. Below, `paste` function will create strings in "yyyy-mm-dd" format with mm being 12 and dd being 31 as show below. Next, `as.Date()` function from base R will convert it into an actual date format!

```{r}

d1_4 <- d1 %>% 
  filter(tic %in% c("AAPL", "TSLA", "META", "MSFT", "AMZN", "NVDA")) %>% 
  mutate(pr_margin = oibdp / sale,
         fyear = as.Date(paste(fyear, "12", "31", sep = "-")))
```


Now use `d1_4` to create the following plot.


```{r}
#| fig.width = 10,
#| fig.fullwidth = TRUE,
#| warning = FALSE
ggplot(d1_4, aes(x = fyear, y = pr_margin))+
  geom_line()+
  facet_wrap(~ conm)+theme(strip.text.x = element_text(hjust = 0))+
  labs(x = "Fiscal Year", y = "Profit Margin")+
  geom_hline(yintercept = 0, color = "red")+
  scale_y_continuous(labels=scales::percent)
```

## Q5 (3 points)

Tesla is the largest car manufacturer in the world by market value. But what about sales? Let's compare sales and market value over the 10/11 years period in our sample.

First create a data frame that you can use to create a plot where you can compare sales and market value in the same plot. This requires rearranging the data into "long" form, where we will stack Tesla's sales and market value on top of each other. 


Here is the code to create such a data set. Please read it carefully to understand all the steps.
```{r}

d1_5 <- d1 %>% 
  filter(conm == "Tesla Inc") %>% 
  mutate(mkt_val = prcc_f * cshpri) %>% # Create market value
  select(conm, datadate, mkt_val, sale) %>% 
  pivot_longer(cols = c(mkt_val, sale), 
               names_to = "fin_var", 
               values_to = "fin_value")
```

Print first few rows of `d1_5` **in the console** by using `head()` function to understand what this data set is. Don't output it inside the homework file.

Now using `d1_5`, create the following plot using `datadate` on the X axis:


```{r}
ggplot(d1_5,aes(x=datadate,y=fin_value,color=fin_var))+
  geom_line()+
  scale_y_continuous(labels=scales::dollar_format())+
  labs(x = "Date", y = NULL,title="Tesla's Sales and Market Value (Million USD)",fill = "Financial Variable")+
  theme(legend.position="top",plot.title = element_text(hjust = 0.5))+scale_colour_discrete(name="Financial Variable")
```


## Q6 (2 points)

When the time variable is discrete, we can also show a time trend using a bar plot. This is quite common in practice. `fyear` is an integer so we can use it as a discrete variable and create a bar plot of profits for Facebook and Nvidia as shown below. Manually change the `fill` of bars using the following colors: `c("#5cc9f5", "#b131a2")`

```{r}
d1 %>% 
  filter(conm %in% c("Nvidia Corp","Meta Platforms Inc")) %>% 
ggplot(aes(x = fyear, y = oibdp,fill=conm)) +
  geom_col()+
  facet_wrap(~conm,dir="v")+
  labs(x = "Fiscal Year", y = "Profits in $ millions")+
  theme(legend.position="top",legend.title=element_blank(),strip.text.x = element_text(hjust = 0))+
  scale_fill_manual(values = c("#5cc9f5", "#b131a2"))+
  scale_x_continuous(breaks=seq(2009,2022))
```

## Q7 (2 points)

Use Mark Zuckerberg's cutout to create the following visualization. You are free to position the picture anywhere and in any size you want. Just don't cover the bars.

```{r}
d1 %>% 
  filter(conm %in% c("Meta Platforms Inc")) %>% 
ggplot(aes(x = fyear, y = oibdp)) +
  geom_col(fill="#5cc9f5")+
  labs(x = "Fiscal Year", y = "Profits in $ millions")+
  scale_x_continuous(breaks=seq(2010,2022))+
   annotation_raster(png::readPNG("mark-zuckerberg-celebrity-mask.png"),
                    xmin = 2010, xmax = 2011.4, 
                    ymin = 40000, ymax = 50000, interpolate = T)

```


## Fun plot! (Not graded)

You don't have to actually make this plot but it's fun to make it! I have shared the cutouts of Musk and Cook in case you want to give it a shot.


```{r}
cook <- jpeg::readJPEG("tim_cook_headshot_glasses.jpg")
zuck <- png::readPNG("mark-zuckerberg-celebrity-mask.png")
musk <- png::readPNG("elon-musk-smile-celebrity-mask.png")
```

```{r}
#| fig.width = 10,
#| fig.fullwidth = TRUE,
#| warning = FALSE
d1 %>% 
  filter(conm %in% c("Apple Inc","Meta Platforms Inc","Tesla Inc")) %>% 
  mutate(mkt_val = prcc_f * cshpri) %>% 
ggplot(aes(x = fyear, y = mkt_val,color=conm))+
  geom_line(size=2)+
  scale_x_continuous(breaks=seq(2015,2022,5))+
  labs(x = NULL, y = "Market Value in $ millions")+
  scale_y_continuous(labels=scales::dollar_format())+
  theme(legend.position="none")+
  scale_color_manual(values = c("orange", "red","brown"))+
  annotation_raster(cook,
                    xmin = 2022, xmax = 2022.6, 
                    ymin = 2100000, ymax = 2300000, interpolate = T)+
    annotation_raster(musk,
                    xmin = 2022, xmax = 2022.6, 
                    ymin = 400000, ymax = 600000, interpolate = T)+
      annotation_raster(zuck,
                    xmin = 2022, xmax = 2022.6, 
                    ymin = 150000, ymax = 350000, interpolate = T)

```

